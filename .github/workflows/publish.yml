name: Release

on:
  push:
    tags:
      - v*.*.*

jobs:
  setup-version:
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install toml
        run: pip install toml

      - name: Get Version
        id: get_version
        run: |
          VERSION=$(python3 -c 'import toml; print(toml.load("pyproject.toml")["tool"]["poetry"]["version"])')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

  publish-to-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-22.04
    needs: setup-version
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: PyPI Setup
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
      - name: Install Poetry
        uses: pronovic/setup-poetry@v2
        with:
          version: "1.8.0"
          plugins: "poetry-dynamic-versioning==1.2.0"
          cache-venv: true
          cache-poetry: true
      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi
      - name: Build package
        run: poetry build
      - name: Publish package
        run: poetry run publish
      - name: Logout
        run: poetry logout

  build-and-push-agent:
    name: Build and Push Agent Image
    runs-on: ubuntu-22.04
    needs: setup-version
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: image=moby/buildkit:v0.11.1-rootless
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Multi-arch Images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            kromiose/nekro-agent:${{ needs.setup-version.outputs.version }}
            kromiose/nekro-agent:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Docker Logout
        run: docker logout

  build-and-push-sandbox:
    name: Build and Push Sandbox Image
    runs-on: ubuntu-22.04
    needs: setup-version
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: image=moby/buildkit:v0.11.1-rootless
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Multi-arch Images
        uses: docker/build-push-action@v4
        with:
          context: ./sandbox
          file: sandbox/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            kromiose/nekro-agent-sandbox:${{ needs.setup-version.outputs.version }}
            kromiose/nekro-agent-sandbox:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Docker Logout
        run: docker logout
