name: Release

on:
  push:
    tags:
      - v*.*.*

jobs:
  publish-to-pypi:
    name: Publish to PyPI (if new version)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install Poetry
        uses: pronovic/setup-poetry@v2
        with:
          version: "1.8.0" # or latest
          plugins: "poetry-dynamic-versioning==1.2.0"
          cache-venv: true
          cache-poetry: true
      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi
      - name: Get Current Version (optional, for informative message)
        id: get_current_version
        run: |
          CURRENT_VERSION=$(poetry version | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+')
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
      - name: Check if package exists on PyPI (informational only)
        id: check_pypi
        run: |
          curl -s -o /dev/null -w "%{http_code}" https://pypi.org/pypi/${{ github.event.repository.name }}/json || true
        continue-on-error: true  # Don't stop workflow on PyPI check failure

      - name: Build package
        run: poetry build

      - name: Determine if Publish is Needed (conditional logic)
        id: determine_publish
        run: |
          if [[ "$CURRENT_VERSION" == "" ]]; then
            echo "Skipping publish: Could not determine current version."
            exit 0  # Exit successfully if version couldn't be determined
          elif [[ "$CURRENT_VERSION" == "${{ env.GITHUB_SHA }}" ]]; then
            echo "Skipping publish: Version already exists in this commit ($CURRENT_VERSION)."
            exit 0  # Exit successfully if version matches commit SHA
          else
            echo "Publishing nekro-agent ($CURRENT_VERSION) to PyPI"
          fi
      - name: Configure PyPI credentials (only if publishing)
        if: steps.determine_publish.outputs == 'Publishing nekro-agent ($CURRENT_VERSION) to PyPI'
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
      - name: Publish package (only if publishing)
        if: steps.determine_publish.outputs == 'Publishing nekro-agent ($CURRENT_VERSION) to PyPI'
        run: poetry publish

  build-and-push-images:
    name: Build and Push Docker Images
    runs-on: ubuntu-22.04
    needs: publish-to-pypi  # Ensure publish-to-pypi runs first (if needed)
    strategy:
      matrix:
        target: [amd64, arm64]
        sandbox: [false, true]
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: image=moby/buildkit:v0.11.1-rootless
      # ... (rest of the build and push steps)