name: Publish to PyPI

on:
  push:
    tags:
      - v*.*.*

jobs:
  publish-to-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10.15"

      - name: Setup Poetry
        uses: pronovic/setup-poetry@v2
        with:
          version: "1.8.0"
          plugins: "poetry-dynamic-versioning==1.2.0"
          cache-venv: "true"
          cache-poetry: "true"

      - name: Install Dependencies
        run: >-
          poetry install
      - name: PyPI Setup
        run: >-
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
      - name: Publish Package
        run: >-
          poetry run publish
  publish-nekro-amd64-image:
    name: Publish Nekro Agent Image (amd64)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Python and Dependencies
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install toml
        run: |
          pip install toml
      - name: Get Version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(python3 -c 'import toml; print(toml.load("pyproject.toml")["tool"]["poetry"]["version"])')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image for amd64
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            kromiose/nekro-agent:${{ env.VERSION }}-amd64
            kromiose/nekro-agent:latest-amd64
            kromiose/nekro-agent:latest
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Cleanup
        run: docker logout

  publish-nekro-arm64-image:
    name: Publish Nekro Agent Image (arm64)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Python and Dependencies
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install toml
        run: |
          pip install toml
      - name: Get Version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(python3 -c 'import toml; print(toml.load("pyproject.toml")["tool"]["poetry"]["version"])')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image for arm64
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            kromiose/nekro-agent:${{ env.VERSION }}-arm64
            kromiose/nekro-agent:latest-arm64
            kromiose/nekro-agent:latest
          platforms: linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Cleanup
        run: docker logout

  publish-sandbox-amd64-image:
    name: Publish Sandbox Image (amd64)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Sandbox Docker Image for amd64
        uses: docker/build-push-action@v2
        with:
          context: ./sandbox
          file: sandbox/Dockerfile
          push: true
          tags: |
            kromiose/nekro-agent-sandbox:latest-amd64
            kromiose/nekro-agent-sandbox:latest
          platforms: linux/amd64

      - name: Cleanup
        run: docker logout

  publish-sandbox-arm64-image:
    name: Publish Sandbox Image (arm64)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Sandbox Docker Image for arm64
        uses: docker/build-push-action@v2
        with:
          context: ./sandbox
          file: sandbox/Dockerfile
          push: true
          tags: |
            kromiose/nekro-agent-sandbox:latest-arm64
            kromiose/nekro-agent-sandbox:latest
          platforms: linux/arm64

      - name: Cleanup
        run: docker logout